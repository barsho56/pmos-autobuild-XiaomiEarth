name: Build you own build!

on:
  workflow_dispatch:
    inputs:
      device:
        description: "Select Device:"
        required: true
        type: string
        default: "xiaomi-earth"
      extras:
        description: "Select Extra Packages:"
        required: false
        type: string
        default: "flatpak,fastfetch,nano,discover-backend-flatpak,kwalletmanager,firefox,mobile-config-firefox"
      hostname:
        description: "Select Hostname:"
        required: true
        type: string
        default: "pmos"
      systemd:
        description: "Select Systemd:"
        required: true
        type: string
        default: "never"
      de:
        description: "Select Desktop Environment:"
        required: true
        type: string
        default: "gnome"
      locale:
        description: "Select System Locale:"
        required: false
        type: string
        default: "en_US"
      username:
        description: "Select pmOS Username:"
        required: true
        type: string
        default: "user"
      pass:
        description: "Select User Password:"
        required: true
        type: string
        default: "147147"
      gh:
        description: "Name of GitHub Release:"
        required: true
        type: string
        default: "postmarketOS"
      noLogs:
        description: "Delete releases,tags,workflowRuns?"
        required: true
        type: string
        default: "false"


permissions:
  contents: write # Give permission to put the release into the repo
  actions: write # Give permission to delete workflow runs

jobs:
  ClearReleasesTagsWorkflowlogs:
    if: ${{ github.event.inputs.noLogs == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Delete all releases
        run: |
          gh release list --limit 1000 | awk '{print $1}' | while read tag; do
            echo "Deleting release: $tag"
            gh release delete "$tag" -y || true
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete all tags
        run: |
          git fetch --tags
          git ls-remote --tags origin | awk '{print $2}' | sed 's|refs/tags/||' | while read tag; do
            echo "Deleting tag: $tag"
            git push origin --delete "$tag" || true
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0

  Build-pmos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pmbootstrap
        run: |
          git clone https://gitlab.postmarketos.org/postmarketOS/pmbootstrap.git
          mkdir -p ~/.local/bin
          ln -s "$PWD/pmbootstrap/pmbootstrap.py" ~/.local/bin/pmbootstrap
          PATH="$HOME/.local/bin:$PATH"
          pmbootstrap --version
        shell: bash

      - name: Create config and init pmbootstrap
        run: |
          yes '' | pmbootstrap init || true
          pmbootstrap config device ${{ github.event.inputs.device }}
          pmbootstrap config extra_packages ${{ github.event.inputs.extras }}
          pmbootstrap config hostname ${{ github.event.inputs.hostname }}
          pmbootstrap config systemd ${{ github.event.inputs.systemd }}
          pmbootstrap config ui ${{ github.event.inputs.de }}
          pmbootstrap config user ${{ github.event.inputs.username }}
          pmbootstrap config locale ${{ github.event.inputs.locale }}
          yes '' | pmbootstrap init || true
        shell: bash

      - name: Build image
        run: |
          pmbootstrap install --password ${{ github.event.inputs.pass }}
          pmbootstrap shutdown
        shell: bash

      - name: Compress images
        run: |
          sudo mv ~/.local/var/pmbootstrap/chroot_rootfs_*/boot/lk2nd.img lk2nd.img
          sudo mv ~/.local/var/pmbootstrap/chroot_native/home/pmos/rootfs/*.img rootfs.img
          sudo chmod 777 lk2nd.img
          sudo chmod 777 rootfs.img
          zip -9 -v "pmOS ${{ github.event.inputs.device }}.zip" lk2nd.img rootfs.img
          rm *.img
        shell: bash

      - name: Create Release Info
        run: |
          echo "Device: ${{ github.event.inputs.device }}" > release_body.txt
          echo "Extra Packages: ${{ github.event.inputs.extras }}" >> release_body.txt
          echo "Hostname: ${{ github.event.inputs.hostname }}" >> release_body.txt
          echo "Systemd: ${{ github.event.inputs.systemd }}" >> release_body.txt
          echo "Desktop Environment: ${{ github.event.inputs.de }}" >> release_body.txt
          echo "System language: ${{ github.event.inputs.locale }}" >> release_body.txt
          echo "Username: ${{ github.event.inputs.username }}" >> release_body.txt
          echo "### User Password: ${{ github.event.inputs.pass }}" >> release_body.txt
        shell: bash

      - name: Create Git Tag and Release with unique name
        id: vars
        run: |
          echo "tag_name=${{ github.event.inputs.gh }}-$(date +'%Y%m%d-%H%M%S'-UTC)" >> "$GITHUB_OUTPUT"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.vars.outputs.tag_name }}
          git push origin ${{ steps.vars.outputs.tag_name }}
        shell: bash

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            pmOS*.zip
          tag_name: ${{ steps.vars.outputs.tag_name }}
          name: ${{ steps.vars.outputs.tag_name }}
          draft: false
          prerelease: false
          body_path: release_body.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
